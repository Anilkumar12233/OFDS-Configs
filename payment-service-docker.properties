server.port=8084

# MySQL (Docker service name used instead of localhost)
spring.datasource.url=jdbc:mysql://mysql-db:3306/OFDS
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Kafka Configuration (Kafka container hostname)
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=payment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.anil.paymentservice.dto.OrderDTO
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Logging (can be redirected with Docker volumes if needed)
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka.clients.consumer=INFO
logging.file.name=/logs/payment-service.log

# Eureka Client (Docker network name used instead of localhost)
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=payment-service
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=10
